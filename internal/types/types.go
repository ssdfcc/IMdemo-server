// Code generated by goctl. DO NOT EDIT.
package types

type IDReq struct {
	ID int `json:"id" validate:"gt=0"`
}

type IDsReq struct {
	Ids []int `json:"ids"`
}

type CreateUserReq struct {
	Name       string `json:"name" validate:"regex=^\\S*$"`
	Password   string `json:"password" validate:"eqfield=Repassword,regex=^\\S*$"`
	Repassword string `json:"repassword" validate:"regex=^\\S*$"`
}

type UpdateUserReq struct {
	Name   string `json:"name" validate:"regex=^\\S*$"`
	Avatar string `json:"avatar,default=uploads/file/default.png"`
}

type GetUserListReq struct {
	Name string `form:"name,optional" json:"name,optional"`
}

type GetUserListResp struct {
	List []UserInfo `json:"list"`
}

type UserInfo struct {
	ID     int    `json:"id"`
	Name   string `json:"name"`
	Phone  string `json:"phone"`
	Email  string `json:"email"`
	Avatar string `json:"avatar"`
}

type LoginReq struct {
	Name     string `json:"name" validate:"regex=^\\S*$"`
	Password string `json:"password" validate:"regex=^\\S*$"`
}

type LoginResp struct {
	Token     string `json:"token"`
	ExpiresAt int64  `json:"expiresAt"`
}

type UploadReq struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type UploadResp struct {
	ID   int    `json:"id"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
	Size int64  `json:"size"`
	Path string `json:"path"`
}

type GetRedisMsgListReq struct {
	ID     int   `json:"id" validate:"gt=0"`
	Type   int   `json:"type" validate:"oneof=1 2"`
	Offset int64 `json:"offset" validate:"gte=10"`
}

type GetRedisMsgListResp struct {
	List []MsgInfo `json:"list"`
}

type MsgInfo struct {
	UserID   int    `json:"userId"`
	TargetId int    `json:"targetId"`
	Content  string `json:"content"`
	Type     int    `json:"type"`
	Media    int    `json:"media"`
	Url      string `json:"url,omitempty"`
}

type GetGroupUserListResp struct {
	List []UserInfo `json:"list"`
}

type SearchFriendResp struct {
	Total int          `json:"total"`
	List  []FrientInfo `json:"list"`
}

type FrientInfo struct {
	ID     int    `json:"id"`
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
}

type SearchGroupResp struct {
	Total int         `json:"total"`
	List  []GroupInfo `json:"list"`
}

type GroupInfo struct {
	ID          int    `json:"id"`
	Name        string `json:"name"`
	Img         string `json:"img"`
	MemberCount int    `json:"memberCount"`
}

type CreateGroupReq struct {
	Name string `json:"name" validate:"regex=^\\S*$"`
	Img  string `json:"img,default=uploads/file/default.png,optional"`
}
