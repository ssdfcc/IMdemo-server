// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	chat "go-zero-chat/internal/handler/chat"
	contact "go-zero-chat/internal/handler/contact"
	user "go-zero-chat/internal/handler/user"
	"go-zero-chat/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/createUser",
				Handler: user.CreateUserHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/user/logout",
					Handler: user.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getUserInfo",
					Handler: user.GetUserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/user/deleteUser",
					Handler: user.DeleteUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/updateUser",
					Handler: user.UpdateUserHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getUserList",
					Handler: user.GetUserListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/upload",
					Handler: user.UploadHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/getRedisMsgList",
					Handler: user.GetRedisMsgListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/user/getGroupUserList",
					Handler: user.GetGroupUserListHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthorityQuery},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/user/sendMsg",
					Handler: user.SendMsgHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/sendUserMsg",
					Handler: user.SendUserMsgHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/contact/searchFriend",
					Handler: contact.SearchFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/contact/searchGroup",
					Handler: contact.SearchGroupHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/contact/addFriend",
					Handler: contact.AddFriendHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/contact/createGroup",
					Handler: contact.CreateGroupHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/contact/addGroup",
					Handler: contact.AddGroupHandler(serverCtx),
				},
			}...,
		),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.AuthorityQuery},
			[]rest.Route{
				{
					Method:  http.MethodGet,
					Path:    "/chat",
					Handler: chat.ChatHandler(serverCtx),
				},
			}...,
		),
	)
}
