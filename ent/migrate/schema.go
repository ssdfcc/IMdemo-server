// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TContactColumns holds the columns for the "t_contact" table.
	TContactColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "type", Type: field.TypeInt, Comment: "对应的类型 1好友", Default: 1},
		{Name: "desc", Type: field.TypeString, Comment: "描述相关", Default: ""},
		{Name: "owner_id", Type: field.TypeInt, Comment: "谁的关系"},
		{Name: "target_id", Type: field.TypeInt, Comment: "对应谁"},
	}
	// TContactTable holds the schema information for the "t_contact" table.
	TContactTable = &schema.Table{
		Name:       "t_contact",
		Columns:    TContactColumns,
		PrimaryKey: []*schema.Column{TContactColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_contact_t_user_contact_owner",
				Columns:    []*schema.Column{TContactColumns[6]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "t_contact_t_user_contact_target",
				Columns:    []*schema.Column{TContactColumns[7]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contact_created_at",
				Unique:  false,
				Columns: []*schema.Column{TContactColumns[1]},
			},
			{
				Name:    "contact_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TContactColumns[3]},
			},
		},
	}
	// TFileColumns holds the columns for the "t_file" table.
	TFileColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "hash", Type: field.TypeString, Comment: "哈希值"},
		{Name: "name", Type: field.TypeString, Comment: "文件名"},
		{Name: "ext", Type: field.TypeString, Comment: "文件格式"},
		{Name: "size", Type: field.TypeInt64, Comment: "文件大小"},
		{Name: "path", Type: field.TypeString, Comment: "文件路径"},
		{Name: "user_id", Type: field.TypeInt, Comment: "上传人id"},
	}
	// TFileTable holds the schema information for the "t_file" table.
	TFileTable = &schema.Table{
		Name:       "t_file",
		Columns:    TFileColumns,
		PrimaryKey: []*schema.Column{TFileColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_file_t_user_files",
				Columns:    []*schema.Column{TFileColumns[9]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "file_created_at",
				Unique:  false,
				Columns: []*schema.Column{TFileColumns[1]},
			},
			{
				Name:    "file_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TFileColumns[3]},
			},
		},
	}
	// TGroupColumns holds the columns for the "t_group" table.
	TGroupColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "name", Type: field.TypeString, Comment: "群名"},
		{Name: "img", Type: field.TypeString, Comment: "图片", Default: "uploads/file/default.png"},
		{Name: "desc", Type: field.TypeString, Comment: "描述相关", Default: ""},
		{Name: "user_id", Type: field.TypeInt, Comment: "所有者"},
	}
	// TGroupTable holds the schema information for the "t_group" table.
	TGroupTable = &schema.Table{
		Name:       "t_group",
		Columns:    TGroupColumns,
		PrimaryKey: []*schema.Column{TGroupColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_group_t_user_group_owner",
				Columns:    []*schema.Column{TGroupColumns[7]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "group_created_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupColumns[1]},
			},
			{
				Name:    "group_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupColumns[3]},
			},
		},
	}
	// TGroupMsgColumns holds the columns for the "t_group_msg" table.
	TGroupMsgColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "media", Type: field.TypeInt, Comment: "消息类型 1文字 2表情包 3图片 4音频 5视频"},
		{Name: "content", Type: field.TypeString, Comment: "消息内容", Default: ""},
		{Name: "pic", Type: field.TypeString, Comment: "图片相关", Default: ""},
		{Name: "url", Type: field.TypeString, Comment: "url相关", Default: ""},
		{Name: "desc", Type: field.TypeString, Comment: "描述相关", Default: ""},
		{Name: "amount", Type: field.TypeInt, Comment: "其他数字统计"},
		{Name: "type", Type: field.TypeInt, Comment: "类型"},
		{Name: "target_id", Type: field.TypeInt, Comment: "群id"},
		{Name: "owner_id", Type: field.TypeInt, Comment: "发送者id"},
	}
	// TGroupMsgTable holds the schema information for the "t_group_msg" table.
	TGroupMsgTable = &schema.Table{
		Name:       "t_group_msg",
		Columns:    TGroupMsgColumns,
		PrimaryKey: []*schema.Column{TGroupMsgColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_group_msg_t_group_target_msg",
				Columns:    []*schema.Column{TGroupMsgColumns[11]},
				RefColumns: []*schema.Column{TGroupColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "t_group_msg_t_user_group_msg",
				Columns:    []*schema.Column{TGroupMsgColumns[12]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "groupmsg_created_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupMsgColumns[1]},
			},
			{
				Name:    "groupmsg_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupMsgColumns[3]},
			},
		},
	}
	// TGroupRelationColumns holds the columns for the "t_group_relation" table.
	TGroupRelationColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "type", Type: field.TypeInt, Comment: "对应的类型 1普通成员 2管理员", Default: 1},
		{Name: "desc", Type: field.TypeString, Comment: "描述相关", Default: ""},
		{Name: "group_id", Type: field.TypeInt, Comment: "群id"},
		{Name: "user_id", Type: field.TypeInt, Comment: "群成员id"},
	}
	// TGroupRelationTable holds the schema information for the "t_group_relation" table.
	TGroupRelationTable = &schema.Table{
		Name:       "t_group_relation",
		Columns:    TGroupRelationColumns,
		PrimaryKey: []*schema.Column{TGroupRelationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_group_relation_t_group_group_relation_group",
				Columns:    []*schema.Column{TGroupRelationColumns[6]},
				RefColumns: []*schema.Column{TGroupColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "t_group_relation_t_user_group_relation_user",
				Columns:    []*schema.Column{TGroupRelationColumns[7]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "grouprelation_created_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupRelationColumns[1]},
			},
			{
				Name:    "grouprelation_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TGroupRelationColumns[3]},
			},
		},
	}
	// TMessageColumns holds the columns for the "t_message" table.
	TMessageColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "type", Type: field.TypeInt, Comment: "发送类型 1私聊 2群聊 3广播"},
		{Name: "media", Type: field.TypeInt, Comment: "消息类型 1文字 2表情包 3图片 4音频 5视频"},
		{Name: "content", Type: field.TypeString, Comment: "消息内容", Default: ""},
		{Name: "pic", Type: field.TypeString, Comment: "图片相关", Default: ""},
		{Name: "url", Type: field.TypeString, Comment: "url相关", Default: ""},
		{Name: "desc", Type: field.TypeString, Comment: "描述相关", Default: ""},
		{Name: "amount", Type: field.TypeInt, Comment: "其他数字统计"},
		{Name: "form_id", Type: field.TypeInt, Comment: "发送者id"},
		{Name: "target_id", Type: field.TypeInt, Comment: "接收者id"},
	}
	// TMessageTable holds the schema information for the "t_message" table.
	TMessageTable = &schema.Table{
		Name:       "t_message",
		Columns:    TMessageColumns,
		PrimaryKey: []*schema.Column{TMessageColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "t_message_t_user_form_msg",
				Columns:    []*schema.Column{TMessageColumns[11]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "t_message_t_user_target_msg",
				Columns:    []*schema.Column{TMessageColumns[12]},
				RefColumns: []*schema.Column{TUserColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "message_created_at",
				Unique:  false,
				Columns: []*schema.Column{TMessageColumns[1]},
			},
			{
				Name:    "message_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TMessageColumns[3]},
			},
		},
	}
	// TUserColumns holds the columns for the "t_user" table.
	TUserColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime, Comment: "创建时间"},
		{Name: "updated_at", Type: field.TypeTime, Comment: "更新时间"},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true, Comment: "删除时间"},
		{Name: "name", Type: field.TypeString, Unique: true, Comment: "用户名"},
		{Name: "password", Type: field.TypeString, Comment: "用户密码"},
		{Name: "avatar", Type: field.TypeString, Comment: "头像", Default: "uploads/file/default.png"},
		{Name: "phone", Type: field.TypeString, Comment: "电话号码", Default: ""},
		{Name: "email", Type: field.TypeString, Comment: "邮箱", Default: ""},
		{Name: "client_ip", Type: field.TypeString, Comment: "客户端ip", Default: ""},
		{Name: "client_port", Type: field.TypeString, Comment: "客户端ip", Default: ""},
		{Name: "salt", Type: field.TypeString, Comment: "加密盐", Default: ""},
		{Name: "login_time", Type: field.TypeTime, Nullable: true, Comment: "登录时间"},
		{Name: "heartbeat_time", Type: field.TypeTime, Nullable: true, Comment: "心跳时间"},
		{Name: "logout_time", Type: field.TypeTime, Nullable: true, Comment: "下线时间"},
		{Name: "is_logout", Type: field.TypeBool, Comment: "是否下线", Default: true},
		{Name: "device_info", Type: field.TypeString, Comment: "设备信息", Default: ""},
	}
	// TUserTable holds the schema information for the "t_user" table.
	TUserTable = &schema.Table{
		Name:       "t_user",
		Columns:    TUserColumns,
		PrimaryKey: []*schema.Column{TUserColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_created_at",
				Unique:  false,
				Columns: []*schema.Column{TUserColumns[1]},
			},
			{
				Name:    "user_deleted_at",
				Unique:  false,
				Columns: []*schema.Column{TUserColumns[3]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TContactTable,
		TFileTable,
		TGroupTable,
		TGroupMsgTable,
		TGroupRelationTable,
		TMessageTable,
		TUserTable,
	}
)

func init() {
	TContactTable.ForeignKeys[0].RefTable = TUserTable
	TContactTable.ForeignKeys[1].RefTable = TUserTable
	TContactTable.Annotation = &entsql.Annotation{
		Table: "t_contact",
	}
	TFileTable.ForeignKeys[0].RefTable = TUserTable
	TFileTable.Annotation = &entsql.Annotation{
		Table: "t_file",
	}
	TGroupTable.ForeignKeys[0].RefTable = TUserTable
	TGroupTable.Annotation = &entsql.Annotation{
		Table: "t_group",
	}
	TGroupMsgTable.ForeignKeys[0].RefTable = TGroupTable
	TGroupMsgTable.ForeignKeys[1].RefTable = TUserTable
	TGroupMsgTable.Annotation = &entsql.Annotation{
		Table: "t_group_msg",
	}
	TGroupRelationTable.ForeignKeys[0].RefTable = TGroupTable
	TGroupRelationTable.ForeignKeys[1].RefTable = TUserTable
	TGroupRelationTable.Annotation = &entsql.Annotation{
		Table: "t_group_relation",
	}
	TMessageTable.ForeignKeys[0].RefTable = TUserTable
	TMessageTable.ForeignKeys[1].RefTable = TUserTable
	TMessageTable.Annotation = &entsql.Annotation{
		Table: "t_message",
	}
	TUserTable.Annotation = &entsql.Annotation{
		Table: "t_user",
	}
}
